
#Область ОбработчикиСобытийФормы

// Процедура - Обработчик события "ПриОткрытии" формы
//
// Параметры:
//  Отказ	 - Булево - Отказ 
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СкрытьПараметрыМетода();
	
КонецПроцедуры

// Процедура - Обработчик команды "Инициализация"
//
// Параметры:
//  Команда	 - КомандаФормы - Команда формы "Инициализация"
//
&НаКлиенте
Процедура Инициализация(Команда)
	
	ВыполнитьМетод_ПоКоманде();
	
КонецПроцедуры

// Процедура - Обработчик команды "Выполнить"
//
// Параметры:
//  Команда	 - КомандаФормы - Команда формы "Выполнить" 
//
&НаКлиенте
Процедура ВыполнитьЗапрос(Команда)
	
	ВыполнитьМетод_ПоКоманде();
	
КонецПроцедуры

// Процедура - Обработчик события "ПриИзменении" реквизита формы "Метод"
//
// Параметры:
//  Элемент	 - ПолеФормы - Реквизит "Метод"
//
&НаКлиенте
Процедура МетодПриИзменении(Элемент)
	
	СкрытьПараметрыМетода();
	ОчиститьРезультатыНаФорме();
	ДобавитьРеквизитыПараметровМетодаНаФорму_НаСервере(Элемент.ВыделенныйТекст);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Процедура - Выполнение метода
// При выполнении сценарий исполнения определяется структурой доступных методов полученных при инициализации (WMLS_GetCap) или от выбранного значения в реквизите "Метод"
//
&НаКлиенте
Процедура ВыполнитьМетод_ПоКоманде()
	
	ПараметрыМетода = ИнициализироватьОбязательнуюСтруктуруМетода();
	ДобавитьПараметрыМетода(ПараметрыМетода);
	
	Результат = РаботаСGTIOnlineВызовСервера.ВыполнитьМетод(ПараметрыМетода);
	
	Если Результат.Успешно = 0 Тогда 
		
		Элементы.ГруппаОсновная.Доступность = Ложь;
		
		Метод = "WMLS_GetCap";
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Не предсказуемая ошибка работы с GTIONLINE'"
		+ "; en = 'Unpredictable error with GTIONLINE'");
		Сообщение.Сообщить();
		
	ИначеЕсли Результат.Успешно = 1 Тогда  
		
		Элементы.ГруппаОсновная.Доступность = Истина;	
		
		РаботаСGTIOnlineВызовСервера.ПрочитатьРезультат(Результат);
		
	ИначеЕсли Результат.Успешно = "Function completed successfully" Тогда 	
		
		Элементы.ГруппаОсновная.Доступность = Истина;
		
	КонецЕсли;
	
	ВывестиРезультатВыполненияМетодаНаФорму(Результат);
	
	Если Метод = "WMLS_GetCap" И Результат.Свойство("таблицаСвойстваWSDL") Тогда 			
		ВывестиДоступныеМетодыНаФорму(Результат);		
	КонецЕсли;	
	
КонецПроцедуры	

// Функция - Инициализировать обязательную структуру метода
// 
// Возвращаемое значение:
//  Структура - Параметры метода
//    * ИмяМетода - Строка - Метод исполняемый сервисом (Всегда доступны: WMLS_GetCap и WMLS_GetVersion).
//    * Логин     - Строка - Данные авторизации.
//    * Пароль    - Строка - Данные авторизации.
//
&НаКлиенте
Функция ИнициализироватьОбязательнуюСтруктуруМетода()
	
	ПараметрыМетода = Новый Структура("ИмяМетода, Логин, Пароль", Метод, Логин, Пароль);
	Возврат ПараметрыМетода;
	
КонецФункции

// Процедура - Скрыть все параметры метода
// Для каждого метода собственные наборы свойств, сначала все их скроем
//
&НаКлиенте
Процедура СкрытьПараметрыМетода()
	
	Для Каждого ЭлементФормы Из Элементы.ГруппаПараметрыМетода.ПодчиненныеЭлементы Цикл 
		ЭлементФормы.Видимость = Ложь;
	КонецЦикла;
	
КонецПроцедуры

// Процедура - Очистить результаты на форме
//
&НаКлиенте
Процедура ОчиститьРезультатыНаФорме()
	
	РезультатЗапроса = "";
	Ошибка = "";
	
КонецПроцедуры

// Процедура - Добавить реквизиты параметров метода на форму
// В зависимости от метода определяется свой список свойств на форме, общий список определяется в общем модуле "РаботаСGTIOnlineПовтИсп"
//
// Параметры:
//  ИмяМетода	 - Строка - Выбранный метод на форме
//
&НаСервере
Процедура ДобавитьРеквизитыПараметровМетодаНаФорму_НаСервере(ИмяМетода)
	
	тзНастройкиДоступныхПолейМетодов = РаботаСGTIOnlineПовтИсп.ОпределитьНастройкиМетодов();
	СтрокиНастройки = тзНастройкиДоступныхПолейМетодов.НайтиСтроки(Новый Структура("Метод", ИмяМетода));
	Для Каждого СтрокаНастройки Из СтрокиНастройки Цикл 
		Если СтрокаНастройки.ЭтоИсходящееСвойство Тогда 	
			
			Элементы[СтрокаНастройки.ДоступноеПоле].Видимость = Истина;
			
		КонецЕсли;		
	КонецЦикла;	
	
КонецПроцедуры

// Процедура - Добавить параметры метода с формы
// Параметры определяются в общем модуля "РаботаСGTIOnlineПовтИсп" для каждого метода
//
// Параметры:
//  ПараметрыМетода	 - Структура - Параметры метода
//    * ИмяМетода - Строка - Метод исполняемый сервисом (Всегда доступны: WMLS_GetCap и WMLS_GetVersion).
//    * Логин     - Строка - Данные авторизации.
//    * Пароль    - Строка - Данные авторизации.
//
&НаКлиенте
Процедура ДобавитьПараметрыМетода(ПараметрыМетода)
	
	Для Каждого ЭлементФормы Из Элементы.ГруппаПараметрыМетода.ПодчиненныеЭлементы Цикл 
		Если ЭлементФормы.Видимость Тогда 
			ПараметрыМетода.Вставить(ЭлементФормы.Имя, ЭлементФормы.ТекстРедактирования);
		КонецЕсли;	
	КонецЦикла;		
	
КонецПроцедуры	

// Процедура - Вывести результат выполнения метода на форму
//
// Параметры:
//  Результат	 - Структура - Параметры работы с сервисом: 
//    * ИмяМетода 			- Строка - Метод исполняемый сервисом (Всегда доступны: WMLS_GetCap и WMLS_GetVersion).
//    * Успешно   			- Число  - Если успешно тогда 1, если не успешно тогда 0, метод WMLS_GetVersion возвращает номер версии протокола.
//    * ПутьКФайлу		    - Строка - В предыдущей процедуре ответ в виде XML строки записывается во временный файл, который здесь будем прочитан. 
//    * Остальные свойства формируются динамически, в зависимости от метода. Общий модуль "РаботаСGTIOnlineПовтИсп" определяет набор свойств и возможных доступных методов 
//
&НаКлиенте
Процедура ВывестиРезультатВыполненияМетодаНаФорму(Результат)
	
	Если Метод = "WMLS_GetVersion" Или Метод = "WMLS_GetBaseMsg" Тогда 
		РезультатЗапроса = Результат.Успешно;
		
	Иначе 	
		
		Если Результат.Свойство("СтрокаXMLОтвета") Тогда 
			Результат.Свойство(Результат.СтрокаXMLОтвета, РезультатЗапроса);	
		КонецЕсли;	
		
		Если Результат.Свойство("СтрокаПоляОшибки") Тогда 
			Результат.Свойство(Результат.СтрокаПоляОшибки, Ошибка);
		КонецЕсли;
		
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Вывести доступные методы на форму
// Доступные методы определяются сначала по общей таблице из общего модуля "РаботаСGTIOnlineПовтИсп" и далее по доступности методов на сервисе
//
// Параметры:
//  Результат	 - Структура - Параметры работы с сервисом: 
//    * ИмяМетода 			- Строка - Метод исполняемый сервисом (Всегда доступны: WMLS_GetCap и WMLS_GetVersion).
//    * Успешно   			- Число  - Если успешно тогда 1, если не успешно тогда 0, метод WMLS_GetVersion возвращает номер версии протокола.
//    * ПутьКФайлу		    - Строка - В предыдущей процедуре ответ в виде XML строки записывается во временный файл, который здесь будем прочитан. 
//    * Остальные свойства формируются динамически, в зависимости от метода. Общий модуль "РаботаСGTIOnlineПовтИсп" определяет набор свойств и возможных доступных методов
//
&НаКлиенте
Процедура ВывестиДоступныеМетодыНаФорму(Результат)
	
	Элементы.Метод.СписокВыбора.Очистить();
	Элементы.WMLtypeIn.СписокВыбора.Очистить();
	
	ПредыдущаяФункция = Неопределено;
	Для Каждого Свойство Из Результат.таблицаСвойстваWSDL Цикл 
		
		Если Свойство.Функция = "WMLS_GetFromStore" Тогда	
			Элементы.WMLtypeIn.СписокВыбора.Добавить(Свойство.ОбъектДанных);
		КонецЕсли;
		
		Если ПредыдущаяФункция <> Свойство.Функция Тогда 
			Элементы.Метод.СписокВыбора.Добавить(Свойство.Функция);
			ПредыдущаяФункция = Свойство.Функция;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры	

#КонецОбласти

#Область Инициализация

Если ПустаяСтрока(Метод) Тогда 
	Метод = "WMLS_GetCap";
КонецЕсли;

#КонецОбласти